// DIPAE - Enosmatomena Systimata - 6o Eksamino
// Alevropoulos Panagiotis
// AM: 2022005
// Askisi X.X
#include <main_.h> // Gia ektelesi se Proteus
//#include <main.h> // Gia ektelesi se PIC

#use standard_io (A) // Standard Eisodoi & Eksodoi
#use standard_io (B) // Standard Eisodoi & Eksodoi
#use standard_io (C) // Standard Eisodoi & Eksodoi
#byte PORTA =0xF80 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTB =0xF81 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTC =0xF82 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTD =0xF83 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTE =0xF84 // Orismos ton thiron me ti thesi tous sti mnimi

//#define SwitchOFF_MSB_Leds PORTB&=0x0f; // Apenergopoiisi ton LSB bits tou PORTB
//#define SwitchOFF_LSB_Leds PORTB&=0xf0; // Apenergopoiisi ton LSB bits tou PORTB
//#define Toggle_LSB_Leds PORTB^=0x0f; // Antrisotrfi ton LSB bits tou PORTB
//#define Toggle_MSB_Leds PORTB^=0xf0; // Antrisotrfi ton MSB bits tou PORTB

//#define Toggle_Led0 PORTB^=0x1; // Antrisotrfi tou bit RB0
//#define Toggle_Led1 PORTB^=0x2; // Antrisotrfi tou bit RB1
//#define Toggle_Led2 PORTB^=0x4; // Antrisotrfi tou bit RB2
//#define Toggle_Led3 PORTB^=0x8; // Antrisotrfi tou bit RB3
//#define Toggle_Led4 PORTB^=0x10; // Antrisotrfi tou bit RB4
//#define Toggle_Led5 PORTB^=0x20; // Antrisotrfi tou bit RB5
//#define Toggle_Led6 PORTB^=0x40; // Antrisotrfi tou bit RB6
//#define Toggle_Led7 PORTB^=0x80; // Antrisotrfi tou bit RB7

#define SwitchOFF_MSB_Leds PORTD&=0x0f; // Apenergopoiisi ton LSB bits tou PORTD
#define SwitchOFF_LSB_Leds PORTD&=0xf0; // Apenergopoiisi ton LSB bits tou PORTD
#define Toggle_LSB_Leds PORTD^=0x0f; // Antrisotrfi ton LSB bits tou PORTD
#define Toggle_MSB_Leds PORTD^=0xf0; // Antrisotrfi ton MSB bits tou PORTD

#define Toggle_Led0 PORTD^=0x1; // Antrisotrfi tou bit RD0
#define Toggle_Led1 PORTD^=0x2; // Antrisotrfi tou bit RD1
#define Toggle_Led2 PORTD^=0x4; // Antrisotrfi tou bit RD2
#define Toggle_Led3 PORTD^=0x8; // Antrisotrfi tou bit RD3
#define Toggle_Led4 PORTD^=0x10; // Antrisotrfi tou bit RD4
#define Toggle_Led5 PORTD^=0x20; // Antrisotrfi tou bit RD5
#define Toggle_Led6 PORTD^=0x40; // Antrisotrfi tou bit RD6
#define Toggle_Led7 PORTD^=0x80; // Antrisotrfi tou bit RD7

int8 digitsTable[] = {0x3f, // 0b00111111 -> 0
                      0x06, // 0b00000110 -> 1
                      0x5b, // 0b01011011 -> 2
                      0x4f, // 0b01001111 -> 3
                      0x66, // 0b01100110 -> 4
                      0x6d, // 0b01101101 -> 5
                      0x7d, // 0b01111101 -> 6
                      0x07, // 0b00000111 -> 7
                      0x7f, // 0b01111111 -> 8
                      0x6f, // 0b01101111 -> 9
                      0x77, // 0b01110111 -> A
                      0x7c, // 0b01111100 -> b
                      0x39, // 0b00111001 -> C
                      0x5e, // 0b01011110 -> d
                      0x79, // 0b01111001 -> E
                      0x71, // 0b01110001 -> F
                      0x80}; // 0b10000000 -> Dot Point

void main()
{
//   set_tris_b(0xff); // Orismos tou PORTB san eisodo (1)
//   set_tris_d(0x00); // Orismos tou PORTD san eksodo (0)

   set_tris_b(0x00); // Orismos tou PORTB san eksodo (0)
   set_tris_c(0x2); // Orismos tou PORTB san eksodo (0)
   set_tris_d(0xff); // Orismos tou PORTD san eisodo (1)
   while (TRUE) {
      output_high(PIN_C2);
      for (int i=0; i < sizeof(digitsTable); i++) {
         PORTB = 0;
         PORTB = digitsTable[i];
         delay_ms(50);
      }
   }
}   

