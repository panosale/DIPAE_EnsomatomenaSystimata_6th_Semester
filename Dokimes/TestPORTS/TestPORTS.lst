CCS PCH C Compiler, Version 5.011, 5967               11-Μαϊ-25 10:39

               Filename:   F:\Common\Programming\GitHub\DIPAE_EnsomatomenaSystimata_6th_Term\Dokimes\TestPORTS\TestPORTS.lst

               ROM used:   124 bytes (0%)
                           Largest free fragment is 32644
               RAM used:   5 (0%) at main() level
                           6 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   0030
.................... #include <main_.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
0004:  CLRF   FEA
0006:  MOVLW  05
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002E
000E:  MOVLW  0F
0010:  MOVWF  01
0012:  MOVLW  BF
0014:  MOVWF  00
0016:  CLRWDT
0018:  DECFSZ 00,F
001A:  BRA    0016
001C:  DECFSZ 01,F
001E:  BRA    0012
0020:  MOVLW  8F
0022:  MOVWF  00
0024:  DECFSZ 00,F
0026:  BRA    0024
0028:  CLRWDT
002A:  DECFSZ FEF,F
002C:  BRA    000E
002E:  RETURN 0
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#build (reset=0x800, interrupt=0x808) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0, 0x7FF {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
....................  
.................... #use standard_io ( A ) 
.................... //#use standard_io ( B ) 
.................... #use standard_io ( C ) 
.................... #byte PORTA =0xF80 
.................... #byte PORTB =0xF81 
.................... #byte PORTC =0xF82 
.................... #byte PORTD =0xF83 
.................... #byte PORTE =0xF84 
....................  
.................... int8 i; 
....................  
.................... void testASM(int n) { 
....................    n = n /2; 
....................    #asm 
....................    #endasm 
.................... } 
....................  
.................... void main() 
0030:  CLRF   FF8
0032:  BCF    FD0.7
0034:  MOVF   FC1,W
0036:  ANDLW  C0
0038:  IORLW  0F
003A:  MOVWF  FC1
003C:  MOVLW  07
003E:  MOVWF  FB4
.................... { 
....................    set_tris_b(0x00); // Ορίζουμε τη θύρα B σαν ΕΞΟΔΟ (0) 
0040:  MOVLW  00
0042:  MOVWF  F93
.................... //   set_tris_D(0xf0); // Ορίζουμε τα MSB της θύρας D σαν ΕΙΣΟΔΟ(1) και τα LSB της σαν ΕΞΟΔΟ(0) 
....................    PORTB = 0x80; 
0044:  MOVLW  80
0046:  MOVWF  F81
....................    while(TRUE) { 
....................        
....................       for (i = 1; i <= 7; i++) {       
0048:  MOVLW  01
004A:  MOVWF  04
004C:  MOVF   04,W
004E:  SUBLW  07
0050:  BNC   0060
....................          delay_ms(200); 
0052:  MOVLW  C8
0054:  MOVWF  05
0056:  RCALL  0004
....................          PORTB = PORTB / 2; 
0058:  BCF    FD8.0
005A:  RRCF   F81,F
005C:  INCF   04,F
005E:  BRA    004C
....................          //rotate_right(&PORTB, 1); 
....................       } 
....................       for (i = 7; i >= 1; i--) {       
0060:  MOVLW  07
0062:  MOVWF  04
0064:  MOVF   04,W
0066:  SUBLW  00
0068:  BC    0078
....................          delay_ms(200); 
006A:  MOVLW  C8
006C:  MOVWF  05
006E:  RCALL  0004
....................          PORTB = PORTB * 2; 
0070:  BCF    FD8.0
0072:  RLCF   F81,F
0074:  DECF   04,F
0076:  BRA    0064
....................          //rotate_left(&PORTB, 1); 
....................       } 
0078:  BRA    0048
....................    } 
.................... } 
....................  
007A:  SLEEP 
....................  

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E3F   NOPUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP ICSP1 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: A00F   NOWRT NOWRTC WRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
