CCS PCH C Compiler, Version 5.011, 5967               12-Μαϊ-25 23:49

               Filename:   F:\Common\Programming\GitHub\DIPAE_EnsomatomenaSystimata_6th_Term\Dokimes\TestBUTTONwINTERRUPTS\TestBUTTON.lst

               ROM used:   236 bytes (1%)
                           Largest free fragment is 32528
               RAM used:   23 (1%) at main() level
                           23 (1%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   00CC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF0.3
004A:  GOTO   0054
004E:  BTFSC  FF0.0
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include <main_.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#build (reset=0x800, interrupt=0x808) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0, 0x7FF {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
.................... // Gia oso einai patimeno to BUTTON afksanei to PORTB kata 1 mexri na ftasei sto 0xff (255) 
.................... // Molis afisoume to BUTTON meionei to PORTB kata 1 mexri na ftasei sto 0x0 (0) 
.................... #use standard_io ( A ) 
.................... //#use standard_io ( B ) 
.................... #use standard_io ( C ) 
.................... #byte PORTA =0xF80 
.................... #byte PORTB =0xF81 
.................... #byte PORTC =0xF82 
.................... #byte PORTD =0xF83 
.................... #byte PORTE =0xF84 
....................  
.................... int8 i = 0; 
....................  
.................... void testASM(int n) { 
....................    n = n /2; 
....................    #asm 
....................    #endasm 
.................... } 
.................... void push_button(void); 
.................... // INTERRUPTS HANDLING 
.................... void init(void); 
.................... void diakopi_ext_int1(); 
....................  
.................... void main() 
*
00CC:  CLRF   FF8
00CE:  BCF    FD0.7
00D0:  BSF    07.7
00D2:  CLRF   16
00D4:  MOVF   FC1,W
00D6:  ANDLW  C0
00D8:  IORLW  0F
00DA:  MOVWF  FC1
00DC:  MOVLW  07
00DE:  MOVWF  FB4
.................... { 
....................    set_tris_b(0xff); // Ορίζουμε τη θύρα B σαν ΕΙΣΟΔΟ (0) 
00E0:  MOVLW  FF
00E2:  MOVWF  F93
....................    set_tris_d(0x00); // Ορίζουμε τη θύρα D σαν ΕΞΟΔΟ(1) 
00E4:  MOVLW  00
00E6:  MOVWF  F95
....................    PORTB = 0;    
00E8:  CLRF   F81
....................    init(); 
00EA:  BRA    00C0
....................    while(TRUE) {} 
00EC:  BRA    00EC
.................... } 
....................  
00EE:  SLEEP 
.................... void push_button(void { // Synartisi elegxou patimatos-apeleftherosis tou BUTTON 
....................    while (input(PIN_B4) == 1) {} // To PORT kai to PIN mporoun na allaksoun analoga tin anagki 
....................    delay_ms(50); 
....................    while (input(PIN_B4) == 0) {} // To PORT kai to PIN mporoun na allaksoun analoga tin anagki 
....................    delay_ms(50);    
.................... } 
....................  
.................... // INTERRUPTS HANDLING 
.................... void init(void) { 
....................    enable_interrupts(GLOBAL); 
*
00C0:  MOVLW  C0
00C2:  IORWF  FF2,F
....................    enable_interrupts(INT_EXT1); 
00C4:  BSF    FF0.3
....................    ext_int_edge(1, L_TO_H); 
00C6:  BSF    FF1.5
00C8:  GOTO   00EC (RETURN)
....................     
.................... } 
....................  
.................... #INT_EXT1 
.................... void diakopi_ext_int1() { 
....................    if (bit_test(PORTB, 0)) { 
*
0096:  BTFSS  F81.0
0098:  BRA    00AA
....................       PORTD ^= i; 
009A:  MOVF   16,W
009C:  XORWF  F83,F
....................       if (i>0) 
009E:  MOVF   16,F
00A0:  BZ    00A4
....................          i--; 
00A2:  DECF   16,F
....................       PORTD ^= i; 
00A4:  MOVF   16,W
00A6:  XORWF  F83,F
....................    } 
00A8:  BRA    00BA
....................    else { 
....................       PORTD ^= i; 
00AA:  MOVF   16,W
00AC:  XORWF  F83,F
....................       if (i<255) 
00AE:  INCFSZ 16,W
00B0:  BRA    00B4
00B2:  BRA    00B6
....................          i++; 
00B4:  INCF   16,F
....................       PORTD ^= i; 
00B6:  MOVF   16,W
00B8:  XORWF  F83,F
....................    } 
00BA:  BCF    FF0.0
00BC:  GOTO   0054
.................... } 
....................  
....................  
....................  

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E3F   NOPUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP ICSP1 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: A00F   NOWRT NOWRTC WRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
