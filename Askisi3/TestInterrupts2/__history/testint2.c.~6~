// DIPAE - Enosmatomena Systimata - 6o Eksamino
// Alevropoulos Panagiotis
// AM: 2022005
// Test Interrupts #2
#include <main_.h>

#use standard_io (A) // Standard Eisodoi & Eksodoi
#use standard_io (B) // Standard Eisodoi & Eksodoi
#use standard_io (C) // Standard Eisodoi & Eksodoi
#byte PORTA =0xF80 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTB =0xF81 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTC =0xF82 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTD =0xF83 // Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTE =0xF84 // Orismos ton thiron me ti thesi tous sti mnimi

// Dilosi global metavliton
byte last = 0;
byte old = 0;
byte changed_bit = 0;
int1 state_p = 0;

// Dilosi sinartiseon
void rb(void);
void init(void);

void main()
{
   init();
   while (TRUE) {
      if ((changed_bit ^ 0x10) == 0) { // Egine allagi tou RB4
         if (state_p) {
            PORTD = PORTD ^ 0x10;
            delay_ms(500);
         }
         else {
            PORTD = PORTD ^ 0x10;
            delay_ms(100);
         }
      }
      if ((changed_bit ^ 0x20) == 0) { // Egine allagi tou RB5
         if (state_p) {
            PORTD = PORTD ^ 0x20;
            delay_ms(500);
         }
         else {
            PORTD = PORTD ^ 0x20;
            delay_ms(100);
         }
      }
      if ((changed_bit ^ 0x40) == 0) { // Egine allagi tou RB6
         if (state_p) {
            PORTD = PORTD ^ 0x40;
            delay_ms(500);
         }
         else {
            PORTD = PORTD ^ 0x40;
            delay_ms(100);
         }
      }
      if ((changed_bit ^ 0x80) == 0) { // Egine allagi tou RB7
         if (state_p) {
            PORTD = PORTD ^ 0x80;
            delay_ms(500);
         }
         else {
            PORTD = PORTD ^ 0x80;
            delay_ms(100);
         }
      }
   }
}   

// Ylopoiisi synartiseon
#INT_RB HIGH // Diakopi me megali proteraiotita
void rb(void) {

}

void init(void) {
   set_tris_b(0xff); // Orismos tou PORTB san eisodo (1)
   set_tris_d(0x00); // Orismos tou PORTD san eksodo (0)
   PORTD = counter;
   port_b_pullups(TRUE);
   ext_int_edge(0, H_TO_L);
   enable_interrupts(INT_EXT); // Energopoiisi eksoterikis diakopis RB0
   enable_interrupts(GLOBAL); // Energopoiisi genikou diakopti diakopon
}
