CCS PCH C Compiler, Version 5.011, 5967               17-Μαρ-25 00:10

               Filename:   F:\Common\Programming\GitHub\DIPAE_EnsomatomenaSistimata_6th_Term\Askisi2.1\askisi2_1.lst

               ROM used:   224 bytes (1%)
                           Largest free fragment is 32544
               RAM used:   5 (0%) at main() level
                           7 (0%) worst case
               Stack used: 1 locations
               Stack size: 31

*
0000:  GOTO   0030
.................... #include <main_.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
0004:  CLRF   FEA
0006:  MOVLW  07
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002E
000E:  MOVLW  0F
0010:  MOVWF  01
0012:  MOVLW  BF
0014:  MOVWF  00
0016:  CLRWDT
0018:  DECFSZ 00,F
001A:  BRA    0016
001C:  DECFSZ 01,F
001E:  BRA    0012
0020:  MOVLW  8F
0022:  MOVWF  00
0024:  DECFSZ 00,F
0026:  BRA    0024
0028:  CLRWDT
002A:  DECFSZ FEF,F
002C:  BRA    000E
002E:  RETURN 0
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#build (reset=0x800, interrupt=0x808) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0, 0x7FF {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
....................  
.................... #use standard_io ( A ) 
.................... #use standard_io ( B ) 
.................... #use standard_io ( C ) 
.................... #byte PORTB =0xF81 
.................... #byte PORTD =0xF83 
....................  
....................  
.................... void main() { 
0030:  CLRF   FF8
0032:  BCF    FD0.7
0034:  MOVF   FC1,W
0036:  ANDLW  C0
0038:  IORLW  0F
003A:  MOVWF  FC1
003C:  MOVLW  07
003E:  MOVWF  FB4
....................    set_tris_b(0x00); // Ορισμός του PORTB σαν έξοδο. 
0040:  MOVLW  00
0042:  MOVWF  F93
....................    set_tris_d(0xff); // Ορισμός του PORTD σαν είσοδο. 
0044:  MOVLW  FF
0046:  MOVWF  F95
....................    int i;    
....................    while (TRUE) { 
....................       while (input_state(PIN_D7)) { // Αναμονή έναρξης προγράμματος. 
0048:  BTFSS  F83.7
004A:  BRA    0052
....................          output_b(0x00); 
004C:  CLRF   F93
004E:  CLRF   F8A
0050:  BRA    0048
....................       }  
....................       if (input_state(PIN_D0)) { // Η πόρτα του κάδου είναι κλειστή. 
0052:  BTFSS  F83.0
0054:  BRA    00DC
....................          delay_ms(2000); 
0056:  MOVLW  08
0058:  MOVWF  06
005A:  MOVLW  FA
005C:  MOVWF  07
005E:  RCALL  0004
0060:  DECFSZ 06,F
0062:  BRA    005A
....................          output_high(PIN_B1); // ’νοιγμα βαλβίδας νερού. 
0064:  BCF    F93.1
0066:  BSF    F8A.1
....................          while (!input_state(PIN_D1)) { // Γέμισε ο κάδος με νερό. 
0068:  BTFSC  F83.1
006A:  BRA    00DC
....................             output_low(PIN_B1); // Κλείσιμο βαλβίδας νερού. 
006C:  BCF    F93.1
006E:  BCF    F8A.1
....................             delay_ms(2000); // Μετά από 2 δευτερόλεπτα... 
0070:  MOVLW  08
0072:  MOVWF  06
0074:  MOVLW  FA
0076:  MOVWF  07
0078:  RCALL  0004
007A:  DECFSZ 06,F
007C:  BRA    0074
....................             output_high(PIN_B2); // ...ανάβει η αντίσταση θέρμανσης νερού 
007E:  BCF    F93.2
0080:  BSF    F8A.2
....................             delay_ms(3000); // Μετά από 3 δευτερόλεπτα...          
0082:  MOVLW  0C
0084:  MOVWF  06
0086:  MOVLW  FA
0088:  MOVWF  07
008A:  RCALL  0004
008C:  DECFSZ 06,F
008E:  BRA    0086
....................             for (i = 0; i < 10; i++) { // ...αρχίζει να κινείται ο κάδος... 
0090:  CLRF   05
0092:  MOVF   05,W
0094:  SUBLW  09
0096:  BNC   00B2
....................                output_toggle(PIN_B3); // Κίνηση κάδου αριστερά. 
0098:  BCF    F93.3
009A:  BTG    F8A.3
....................                output_toggle(PIN_B4); // Κίνηση κάδου αριστερά. 
009C:  BCF    F93.4
009E:  BTG    F8A.4
....................                delay_ms(3000); // Μετά από 3 δευτερόλεπτα... 
00A0:  MOVLW  0C
00A2:  MOVWF  06
00A4:  MOVLW  FA
00A6:  MOVWF  07
00A8:  RCALL  0004
00AA:  DECFSZ 06,F
00AC:  BRA    00A4
00AE:  INCF   05,F
00B0:  BRA    0092
.................... //               output_low(PIN_B3); // Κίνηση κάδου δεξιά. 
.................... //               output_low(PIN_B4); // Κίνηση κάδου δεξιά. 
....................             } // ... μετά από 10 δευτερόλεπτα σταματάει η κίνηση του κάδου. 
....................             output_low(PIN_B2); // Σβήνει η αντίσταση θέρμανσης νερού. 
00B2:  BCF    F93.2
00B4:  BCF    F8A.2
....................             delay_ms(3000); // Μετά από 3 δευτερόλεπτα... 
00B6:  MOVLW  0C
00B8:  MOVWF  06
00BA:  MOVLW  FA
00BC:  MOVWF  07
00BE:  RCALL  0004
00C0:  DECFSZ 06,F
00C2:  BRA    00BA
....................             output_high(PIN_B5); // ...ενεργοποίηση αντλίας νερού εξόδου. 
00C4:  BCF    F93.5
00C6:  BSF    F8A.5
....................             delay_ms(5000); // Μετά από 5 δευτερόλεπτα... 
00C8:  MOVLW  14
00CA:  MOVWF  06
00CC:  MOVLW  FA
00CE:  MOVWF  07
00D0:  RCALL  0004
00D2:  DECFSZ 06,F
00D4:  BRA    00CC
....................             output_low(PIN_B5); // ...απενεργοποίηση αντλίας νερού εξόδου. 
00D6:  BCF    F93.5
00D8:  BCF    F8A.5
00DA:  BRA    0068
....................          } 
....................       } 
00DC:  BRA    0048
....................    } 
.................... } 
....................   
00DE:  SLEEP 

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E3F   NOPUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP ICSP1 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: A00F   NOWRT NOWRTC WRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
