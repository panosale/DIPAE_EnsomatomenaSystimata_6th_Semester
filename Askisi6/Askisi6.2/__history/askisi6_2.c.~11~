// DIPAE - Enosmatomena Systimata - 6o Eksamino
// Alevropoulos Panagiotis
// AM: 2022005
// Askisi: 6.2
#include <main_.h>

// Standard Eisodoi & Eksodoi
#use standard_io (A)   
#use standard_io (B)
#use standard_io (C)

// Orismos ton thiron me ti thesi tous sti mnimi
#byte PORTA = 0xF80
#byte PORTB = 0xF81
#byte PORTC = 0xF82
#byte PORTD = 0xF83
#byte PORTE = 0xF84

#DEFINE int 16 timer_start_value = 5536; // Orismos arxikis timis timer0;

//  Orismos metavliton
int8  des=0;
int16 seconds=0;

// Dilosi pinaka katastaseon Endeikti 7 tomeon koinis kathodou
int8 table[16] = { 0b00111111, 
                   0b00000110, 
                   0b01011011, 
                   0b01001111, 
                   0b01100110, 
                   0b01101101, 
                   0b01111101, 
                   0b00000111, 
                   0b01111111, 
                   0b01101111, 
                   0b01110111, 
                   0b01111100, 
                   0b00111001, 
                   0b01011110, 
                   0b01111001, 
                   0b01110001 };  

// Dilosi pinaka tranzistor gia energopoiisi tou PORTC ton 3 endikton kai tin emfanisi psifion
int8 dig[3] = {1,2,4};

// Dilosi sinartiseon eksipiretisis
void timer0_int(void);
void init (void);
void ext_int1(void);

// Kyrios programma
void main() {
   init(); 
   while (TRUE) {
   }
}

// Ορισμός συναρτήσεων 
#INT_EXT1 
void ext_int1(void){
   seconds++;
   disable_interrupts(INT_EXT1);                                       
}

// Ylopoiisi synartiseon
#INT_TIMER0 // Diakopi me megali protereotita
void timer0_int(void) {
   int16 mon,dec,eka;
   if (seconds > 999) {
      seconds = 0;
   }              
   eka = (int8) (seconds /100); // Ekatontades
   dec = (int8) ((seconds - (100*eka))/10); // Dekades
   mon = (int8) (seconds - (100 * eka) -(10 * dec)); // Mondaes
   set_timer0(timer_start_value); // αρχική τιμή του μετρητή
   des = ++des % 3; // Module 3 metritis 
                    // pou leitourgei os deiktis 
                    // gia ton pinaka epilogis tou psifiou
                    // pou deixnei kathe stigmi.
   PORTC = dig[des]; // Epilogi enos apo ta 3 psifia
   if (des == 0) {
      PORTD = table[mon]; // Deikse tis monades
      CLEAR_INTERRUPT(INT_EXT1); // Katharismos tou interrupt 1
      enable_interrupts(INT_EXT1); // Epanenergopoiisi tou interrupt 1
   }         
   if (des == 1) {
      PORTD = table[dec]; // Deikse tis dekades
   }            
   if (des == 2) {
      PORTD = table[eka]; // Deikse tis ekatonades
   }               
}                     
void init (void){
   set_tris_b(0xff);  // Orismos tou PORTB san eisodo (1)
   set_tris_c(0x00);  // Orismos tou PORTC san eksodo (0)
   set_tris_d(0x00);  // Orismos tou PORTD san eksodo (0)
   PORTD = 0;
   PORTC = 0;
   seconds = 0;
   des = 0; // Arxikopoiisi tis epilogis psifiou
   port_b_pullups(TRUE); 
   ext_int_edge(1, H_TO_L);
   SETUP_TIMER_0(T0_INTERNAL | T0_DIV_1 ); // Prescaler
   set_timer0(timer_start_value); // Arxikopoiisi tou timer0;
   enable_interrupts(INT_EXT1); // Arxikopoiisi tou interrupt 1;
   enable_interrupts(INT_TIMER0); // Arxikopoiisi tou interrupt timer0
   enable_interrupts(GLOBAL); // Energopoiisi genikou diakopti diakopon
}

