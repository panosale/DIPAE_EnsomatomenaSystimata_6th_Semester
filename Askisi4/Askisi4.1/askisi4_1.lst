CCS PCH C Compiler, Version 5.011, 5967               01-Απρ-25 23:17

               Filename:   F:\Common\Programming\GitHub\DIPAE_EnsomatomenaSystimata_6th_Term\Askisi4\Askisi4.1\askisi4_1.lst

               ROM used:   316 bytes (1%)
                           Largest free fragment is 32448
               RAM used:   28 (1%) at main() level
                           28 (1%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0110
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   00BA
0054:  BTFSS  FF0.3
0056:  GOTO   0060
005A:  BTFSC  FF0.0
005C:  GOTO   00A2
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... // DIPAE - Enosmatomena Systimata - 6o Eksamino 
.................... // Alevropoulos Panagiotis 
.................... // AM: 2022005 
.................... // Askisi 4 - Test timer 
.................... #include <main_.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#build (reset=0x800, interrupt=0x808) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0, 0x7FF {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
....................  
.................... #use standard_io (A) // Standard Eisodoi & Eksodoi 
.................... #use standard_io (B) // Standard Eisodoi & Eksodoi 
.................... #use standard_io (C) // Standard Eisodoi & Eksodoi 
....................  
.................... #byte PORTA =0xF80 // Orismos ton thiron me ti thesi tous sti mnimi 
.................... #byte PORTB =0xF81 // Orismos ton thiron me ti thesi tous sti mnimi 
.................... #byte PORTC =0xF82 // Orismos ton thiron me ti thesi tous sti mnimi 
.................... #byte PORTD =0xF83 // Orismos ton thiron me ti thesi tous sti mnimi 
.................... #byte PORTE =0xF84 // Orismos ton thiron me ti thesi tous sti mnimi 
....................  
.................... #define Toggle_Led0 PORTD^=0x1; // Antrisotrfi tou bit RD0 
.................... #define Toggle_Led1 PORTD^=0x2; // Antrisotrfi tou bit RD1 
.................... #define Toggle_Led2 PORTD^=0x4; // Antrisotrfi tou bit RD2 
.................... #define Toggle_Led3 PORTD^=0x8; // Antrisotrfi tou bit RD3 
.................... #define Toggle_Led4 PORTD^=0x10; // Antrisotrfi tou bit RD4 
.................... #define Toggle_Led5 PORTD^=0x20; // Antrisotrfi tou bit RD5 
.................... #define Toggle_Led6 PORTD^=0x40; // Antrisotrfi tou bit RD6 
.................... #define Toggle_Led7 PORTD^=0x80; // Antrisotrfi tou bit RD7 
....................  
....................  
.................... int1 previous_H_TO_L = 1; // Metavliti gia na mporoume na allazoume to metopo energopoiisis tis diakopis mesa sti routina eksipiretisis 
.................... int16 timer_start_value = 18661; // Orismos arxikis timis timer0; 
.................... int1 car_in_zone = 0; 
.................... int8 counter = 2; 
.................... int8 low_counter = 4; 
.................... int8 hi_counter = 2; 
....................  
.................... // Dilosi sinartiseon eksipiretisis 
.................... void timer0_int(void); 
.................... void ext_int1(void); 
.................... void init(void); 
....................  
.................... void main() 
*
0110:  CLRF   FF8
0112:  BCF    FD0.7
0114:  BSF    07.7
0116:  BSF    16.0
0118:  MOVLW  48
011A:  MOVWF  18
011C:  MOVLW  E5
011E:  MOVWF  17
0120:  BCF    16.1
0122:  MOVLW  02
0124:  MOVWF  19
0126:  MOVLW  04
0128:  MOVWF  1A
012A:  MOVLW  02
012C:  MOVWF  1B
012E:  MOVF   FC1,W
0130:  ANDLW  C0
0132:  IORLW  0F
0134:  MOVWF  FC1
0136:  MOVLW  07
0138:  MOVWF  FB4
.................... { 
....................    init(); 
013A:  BRA    00EE
....................    while (TRUE) { 
013C:  BRA    013C
....................    } 
.................... }    
....................  
.................... #INT_EXT1 
.................... void ext_int1(void) { 
013E:  SLEEP 
....................    // Me ton parakato tropo mporoume na allazoume to metopo energopoiisis tis diakopis mesa sti routina eksipiretisis 
....................    if (previous_H_TO_L) // An i proigoumeni katastasi tou metopou L se H itan TRUE... 
*
00A2:  BTFSS  16.0
00A4:  BRA    00AA
....................       ext_int_edge(1, L_TO_H); // ...allazei to metopo tis diakopis apo H se L... 
00A6:  BSF    FF1.5
00A8:  BRA    00AC
....................    else 
....................       ext_int_edge(1, H_TO_L); // ...allios allazei to metopo tis diakopis apo L se H 
00AA:  BCF    FF1.5
....................    car_in_zone = previous_H_TO_L; 
00AC:  BCF    16.1
00AE:  BTFSC  16.0
00B0:  BSF    16.1
....................    previous_H_TO_L = !previous_H_TO_L; 
00B2:  BTG    16.0
....................    // car_in_zone = 1; 
.................... } 
....................  
00B4:  BCF    FF0.0
00B6:  GOTO   0060
.................... #INT_TIMER0 
.................... void timer0_int(void) { 
....................    set_timer0(timer_start_value); 
00BA:  MOVFF  18,FD7
00BE:  MOVFF  17,FD6
....................    counter--; 
00C2:  DECF   19,F
....................    if ((!car_in_zone) && (counter == 0)) { 
00C4:  BTFSC  16.1
00C6:  BRA    00D6
00C8:  MOVF   19,F
00CA:  BNZ   00D6
....................       PORTB = PORTB & 0b00010000; 
00CC:  MOVLW  10
00CE:  ANDWF  F81,F
....................       PORTB = PORTB ^ 0b00010000; 
00D0:  XORWF  F81,F
....................       counter = low_counter; 
00D2:  MOVFF  1A,19
....................    } 
....................    if ((car_in_zone) && (counter == 0)) { 
00D6:  BTFSS  16.1
00D8:  BRA    00E8
00DA:  MOVF   19,F
00DC:  BNZ   00E8
....................       PORTB = PORTB & 0b10000000; 
00DE:  MOVLW  80
00E0:  ANDWF  F81,F
....................       PORTB = PORTB ^ 0b10000000; 
00E2:  XORWF  F81,F
....................       counter = hi_counter; 
00E4:  MOVFF  1B,19
....................    } 
00E8:  BCF    FF2.2
00EA:  GOTO   0060
.................... } 
....................  
.................... void init(void) { 
....................    set_tris_b(0x0f); // Orismos ton 4 MSB tou PORTB san eksodo (0) kai ton 4 LSB tou san eisodo (1) 
00EE:  MOVLW  0F
00F0:  MOVWF  F93
....................    PORTB = 0x00; 
00F2:  CLRF   F81
....................    port_b_pullups(TRUE); 
00F4:  BCF    FF1.7
....................    ext_int_edge(1, L_TO_H); // Gia na mporoume na allazoume to metopo kata tin ektelesi tiw routinas eksiporetisis prepei to interrupt afto na ksekinaei apo L_TO_H  
00F6:  BSF    FF1.5
.................... //   ext_int_edge(1, H_TO_L);  
....................    SETUP_TIMER_0(T0_INTERNAL | T0_DIV_32); 
00F8:  MOVLW  84
00FA:  MOVWF  FD5
....................    set_timer0(timer_start_value); 
00FC:  MOVFF  18,FD7
0100:  MOVFF  17,FD6
....................    enable_interrupts(INT_TIMER0); 
0104:  BSF    FF2.5
....................    enable_interrupts(INT_EXT1); // Energopoiisi eksoterikis diakopis RB1 
0106:  BSF    FF0.3
....................    enable_interrupts(GLOBAL); // Energopoiisi genikou diakopti diakopon 
0108:  MOVLW  C0
010A:  IORWF  FF2,F
010C:  GOTO   013C (RETURN)
.................... } 

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E3F   NOPUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP ICSP1 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: A00F   NOWRT NOWRTC WRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
