// Askisi theorias 4a
#include <main_.h>
// Gia oso einai patimeno to BUTTON afksanei to PORTB kata 1 mexri na ftasei sto 0xff (255)
// Molis afisoume to BUTTON meionei to PORTB kata 1 mexri na ftasei sto 0x0 (0)
#use standard_io ( A )
//#use standard_io ( B )
#use standard_io ( C )
#byte PORTA =0xF80
#byte PORTB =0xF81
#byte PORTC =0xF82
#byte PORTD =0xF83
#byte PORTE =0xF84

const int16 DEFAULT_DELAY = 200;

void push_button(void);
// INTERRUPTS HANDLING
void init(void);
void eksoteriki_diakopi1();

void main()
{
   init();
   while(TRUE) {
      PORTD = PORTD ^ 0xff;
      delay_ms(100);
   }
}

void push_button(void { // Synartisi elegxou patimatos-apeleftherosis tou BUTTON
   while (input(PIN_B4) == 1) {} // To PORT kai to PIN mporoun na allaksoun analoga tin anagki
   delay_ms(50); // Eksalipsi fainomenou anapidisis
   while (input(PIN_B4) == 0) {} // To PORT kai to PIN mporoun na allaksoun analoga tin anagki
   delay_ms(50); // Eksalipsi fainomenou anapidisis  
}

void init(void) {
   set_tris_b(0xff); // Ορίζουμε τη θύρα B σαν ΕΙΣΟΔΟ (0)
   set_tris_d(0x00); // Ορίζουμε τη θύρα D σαν ΕΞΟΔΟ (1)
   PORTD = 0x0;   
   // Arxikopoiisi interrups
   enable_interrupts(GLOBAL);
   enable_interrupts(INT_EXT1);
   ext_int_edge(1, H_TO_L);
   
}

// INTERRUPTS HANDLING
#INT_EXT1
void eksoteriki_diakopi1() {
   int i;
   PORTD = 0x0;
   int8 dot_position = 0x80;
   for (i = 0; i < 8; i++) {
      PORTD = PORTD ^ dot_position;
      delay_ms(DEFAULT_DELAY);
      PORTD = PORTD ^ dot_position;
      delay_ms(DEFAULT_DELAY);
      dot_position = dot_position / 2;
   }
   dot_position = 1;
//   PORTD = PORTD ^ dot_position;
//   delay_ms(500);
   for (i = 0; i < 8; i++) {
      PORTD = PORTD ^ dot_position;
      delay_ms(DEFAULT_DELAY);
      PORTD = PORTD ^ dot_position;
      delay_ms(DEFAULT_DELAY);
      dot_position = dot_position * 2;
   }
   PORTD = 0x0;
}

