CCS PCH C Compiler, Version 5.011, 5967               25-Ìáú-25 18:45

               Filename:   F:\Common\Programming\GitHub\DIPAE_EnsomatomenaSystimata_6th_Term\AskisisTheorias\Timers\Askisi6c\Askisi6c.lst

               ROM used:   276 bytes (1%)
                           Largest free fragment is 32488
               RAM used:   26 (1%) at main() level
                           26 (1%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0100
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   0096
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Askisi 6c theorias gia timer0 
.................... // Allagi katastasis ton LED0, 1, 2 & kathe 100ms, 150ms, 200ms & 300ms antistoixa 
.................... #include <main_.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
....................  
.................... #list 
....................  
.................... #device adc=10 
....................  
.................... #FUSES NOWDT                     //No Watch Dog Timer 
.................... #FUSES WDT32768                    //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HSPLL                     //High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES NOPROTECT                 //Code not protected from reading 
.................... #FUSES BROWNOUT                //No brownout reset 
.................... //#FUSES BORV20                    //Brownout reset at 2.0V 
.................... #FUSES NOPUT                     //No Power Up Timer 
.................... #FUSES NOCPD                     //No EE protection 
.................... #FUSES STVREN                    //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                   //No Debug mode for ICD 
.................... #FUSES NOLVP                     //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                     //Program memory not write protected 
.................... #FUSES NOWRTD                    //Data EEPROM not write protected 
.................... #FUSES NOIESO                      //Internal External Switch Over mode enabled 
.................... #FUSES NOFCMEN                     //Fail-safe clock monitor enabled 
.................... #FUSES NOPBADEN                 ///PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                    //configuration not registers write protected 
.................... #FUSES NOWRTB                    //Boot block not write protected 
.................... #FUSES NOEBTR                    //Memory not protected from table reads 
.................... #FUSES NOEBTRB                   //Boot block not protected from table reads 
.................... #FUSES NOCPB                     //No Boot Block code protection 
.................... #FUSES MCLR                      //Master Clear pin enabled 
.................... #FUSES NOLPT1OSC                   //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                   //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL5                      //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV1                   //System Clock by 2 
.................... #FUSES USBDIV                    //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                    //USB voltage regulator enabled 
.................... //#FUSES ICPRT                     //ICPRT enabled 
.................... #FUSES WRTB 
.................... #FUSES NOICPRT  
.................... #FUSES NOLPT1OSC 
.................... #FUSES CCP2B3  
.................... #FUSES NOCPB 
.................... #FUSES NOCPD 
.................... #FUSES NOWRTC 
.................... #FUSES NOWRTD 
.................... #FUSES NOEBTR 
.................... #FUSES NOEBTRB               
....................  
.................... /* systm clock is 48 MHz */ 
.................... #use delay(clock=48000000,RESTART_WDT) 
.................... /* --- BEGIN: changes required for bootloader ------------------------------ */ 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* map reset vector and interrupt vector                                     */ 
.................... /* 0x000-0x7FF is used by the bootloader. The bootloader maps the original   */ 
.................... /* reset vecotr (0x000) to 0x800 and the reset vector (0x008) to 0x800.      */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#build (reset=0x800, interrupt=0x808) 
....................  
.................... /* ------------------------------------------------------------------------- */ 
.................... /* reserve boot block area                                                   */ 
.................... /* This memory range is used by the bootloader, so the application must not  */ 
.................... /* use this area.                                                            */ 
.................... /* ------------------------------------------------------------------------- */ 
.................... //#org 0, 0x7FF {} 
....................  
.................... /* --- END: changes required for bootloader -------------------------------- */ 
....................  
....................  
....................  
....................  
....................  
.................... #use standard_io ( A ) 
.................... #use standard_io ( B ) 
.................... #use standard_io ( C ) 
.................... #byte PORTA =0xF80 
.................... #byte PORTB =0xF81 
.................... #byte PORTC =0xF82 
.................... #byte PORTD =0xF83 
.................... #byte PORTE =0xF84 
....................  
.................... // Ypologizoume me logo 1/64 tin periodo stin eisodo tou timer0 
.................... // 10ms = 10000ìó 
.................... // 32 * 83.33ns = 2666.56ns = 2.66656ìs 
.................... // (65536 - y) * 2.66656ìs = 50000 => 65536 - y = 50000 / 2.66656 => 
.................... // 65536 - y = 18750 => y = 46786 
.................... #define TIMER_INITIAL_VALUE 46786 // H ypologismeni periodos apo ton parapano typo.  
.................... #define COUNTER1_VALUE 2 // Timi tou counter1 prokeimenou na ftasoume sta 100ms.  
.................... #define COUNTER2_VALUE 3 // Timi tou counter1 prokeimenou na ftasoume sta 150ms.  
.................... #define COUNTER3_VALUE 4 // Timi tou counter1 prokeimenou na ftasoume sta 200ms.  
.................... #define COUNTER4_VALUE 6 // Timi tou counter1 prokeimenou na ftasoume sta 300ms.  
.................... // INTERRUPTS HANDLING 
.................... void init(void); 
.................... void timer0_int(void); 
.................... int8 counter1, counter2, counter3, counter4; 
....................  
.................... void main() 
*
0100:  CLRF   FF8
0102:  BCF    FD0.7
0104:  BSF    07.7
0106:  MOVF   FC1,W
0108:  ANDLW  C0
010A:  IORLW  0F
010C:  MOVWF  FC1
010E:  MOVLW  07
0110:  MOVWF  FB4
.................... { 
....................    init(); 
0112:  BRA    00DA
....................    while(TRUE) { 
0114:  BRA    0114
....................    } 
.................... } 
....................  
0116:  SLEEP 
.................... void init(void) { 
....................    set_tris_b(0x00); // Ïñßæïõìå ôç èýñá B óáí ÅÎÏÄÏ (0) 
*
00DA:  MOVLW  00
00DC:  MOVWF  F93
....................    PORTB = 0x00;    
00DE:  CLRF   F81
....................    counter1 = COUNTER1_VALUE; // Epeidi 100 = counter1 * 10 ara counter1 = 10 
00E0:  MOVLW  02
00E2:  MOVWF  16
....................    counter2 = COUNTER1_VALUE; // Epeidi 150 = counter2 * 10 ara counter2 = 15 
00E4:  MOVWF  17
....................    counter3 = COUNTER1_VALUE; // Epeidi 200 = counter3 * 10 ara counter3 = 20 
00E6:  MOVWF  18
....................    counter4 = COUNTER1_VALUE; // Epeidi 300 = counter4 * 10 ara counter4 = 30 
00E8:  MOVWF  19
....................    // Arxikopoiisi interrupts 
....................    SETUP_TIMER_0(T0_INTERNAL | T0_DIV_64); 
00EA:  MOVLW  85
00EC:  MOVWF  FD5
....................    enable_interrupts(GLOBAL); 
00EE:  MOVLW  C0
00F0:  IORWF  FF2,F
....................    enable_interrupts(INT_TIMER0); 
00F2:  BSF    FF2.5
....................    set_timer0(TIMER_INITIAL_VALUE); 
00F4:  MOVLW  B6
00F6:  MOVWF  FD7
00F8:  MOVLW  C2
00FA:  MOVWF  FD6
00FC:  GOTO   0114 (RETURN)
.................... } 
....................  
.................... // INTERRUPTS HANDLING 
.................... #INT_TIMER0 
.................... void timer0_int() { 
....................    set_timer0(TIMER_INITIAL_VALUE); // Arxikopoiisi panta tou timer0 me tin arxiki timi poy ypologisame 
*
0096:  MOVLW  B6
0098:  MOVWF  FD7
009A:  MOVLW  C2
009C:  MOVWF  FD6
....................    counter1--; // Meiosi to counter mexri na ginei 0 oste na ftasoume ta 200ms (20 * 10 = 200ms) 
009E:  DECF   16,F
....................    if (counter1 == 0) { // Otan o counter1 ginei 0, ara eftase sta 200ms 
00A0:  MOVF   16,F
00A2:  BNZ   00AC
....................       counter1 = COUNTER1_VALUE; // arxikopoiisi tou pali sto 20 
00A4:  MOVLW  02
00A6:  MOVWF  16
....................       PORTB = PORTB ^ 0b1; // Allagi katastasis tou led0 sto PORTB 
00A8:  MOVLW  01
00AA:  XORWF  F81,F
....................    } 
....................    counter2--; // Meiosi to counter mexri na ginei 0 oste na ftasoume ta 200ms (20 * 10 = 200ms) 
00AC:  DECF   17,F
....................    if (counter2 == 0) { // Otan o counter1 ginei 0, ara eftase sta 200ms 
00AE:  MOVF   17,F
00B0:  BNZ   00BA
....................       counter2 = COUNTER2_VALUE; // arxikopoiisi tou pali sto 20 
00B2:  MOVLW  03
00B4:  MOVWF  17
....................       PORTB = PORTB ^ 0b10; // Allagi katastasis tou led1 sto PORTB 
00B6:  MOVLW  02
00B8:  XORWF  F81,F
....................    } 
....................    counter3--; // Meiosi to counter mexri na ginei 0 oste na ftasoume ta 200ms (20 * 10 = 200ms) 
00BA:  DECF   18,F
....................    if (counter3 == 0) { // Otan o counter1 ginei 0, ara eftase sta 200ms 
00BC:  MOVF   18,F
00BE:  BNZ   00C6
....................       counter3 = COUNTER3_VALUE; // arxikopoiisi tou pali sto 20 
00C0:  MOVLW  04
00C2:  MOVWF  18
....................       PORTB = PORTB ^ 0b100; // Allagi katastasis tou led2 sto PORTB 
00C4:  XORWF  F81,F
....................    } 
....................    counter4--; // Meiosi to counter mexri na ginei 0 oste na ftasoume ta 200ms (20 * 10 = 200ms) 
00C6:  DECF   19,F
....................    if (counter4 == 0) { // Otan o counter1 ginei 0, ara eftase sta 200ms 
00C8:  MOVF   19,F
00CA:  BNZ   00D4
....................       counter4 = COUNTER4_VALUE; // arxikopoiisi tou pali sto 20 
00CC:  MOVLW  06
00CE:  MOVWF  19
....................       PORTB = PORTB ^ 0b1000; // Allagi katastasis tou led3 sto PORTB 
00D0:  MOVLW  08
00D2:  XORWF  F81,F
....................    } 
00D4:  BCF    FF2.2
00D6:  GOTO   0054
.................... } 
....................  

Configuration Fuses:
   Word  1: 0E24   PLL5 CPUDIV1 USBDIV HSPLL NOFCMEN NOIESO
   Word  2: 1E3F   NOPUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8000   CCP2B3 NOPBADEN NOLPT1OSC MCLR
   Word  4: 0081   STVREN NOLVP ICSP1 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: A00F   NOWRT NOWRTC WRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
